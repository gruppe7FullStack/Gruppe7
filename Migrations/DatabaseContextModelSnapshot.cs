// <auto-generated />
using System;
using Gruppe7.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gruppe7.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gruppe7.Models.Level", b =>
                {
                    b.Property<string>("LevelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("Gruppe7.Models.Observation", b =>
                {
                    b.Property<Guid>("Elementid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RootObjectSourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TimeOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeResolution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeSeriesId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Elementid");

                    b.HasIndex("RootObjectSourceId");

                    b.ToTable("Observation");
                });

            modelBuilder.Entity("Gruppe7.Models.RootObject", b =>
                {
                    b.Property<Guid>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReferenceTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SourceId");

                    b.ToTable("RootObject");
                });

            modelBuilder.Entity("Gruppe7.Models.WeatherForecast", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecast");
                });

            modelBuilder.Entity("Gruppe7.Models.Observation", b =>
                {
                    b.HasOne("Gruppe7.Models.RootObject", null)
                        .WithMany("Observations")
                        .HasForeignKey("RootObjectSourceId");
                });

            modelBuilder.Entity("Gruppe7.Models.RootObject", b =>
                {
                    b.Navigation("Observations");
                });
#pragma warning restore 612, 618
        }
    }
}
